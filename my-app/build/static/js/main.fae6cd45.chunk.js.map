{"version":3,"sources":["images/logo.jpg","components/Header/Header.jsx","App.js","serviceWorker.js","components/Header/LangSwitcher/LangSwitcher.jsx","text.js","index.js","components/Header/LangSwitcher/LangSwitcher.module.sass","components/Header/Header.module.sass"],"names":["module","exports","Header","props","text","className","s","header","container","logoWrapper","src","logo","alt","to","home","link","immuno","effects","treat","faq","reha","App","path","Boolean","window","location","hostname","match","LangSwitcher","wrapper","contact","dropdown","dropbtn","from","dropdownContent","mail","href","ru","en","ReactDOM","render","StrictMode","exact","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fae6cd45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5984e3a4.jpg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Header.module.sass\";\r\nimport logo from \"./../../images/logo.jpg\";\r\n\r\nconst Header = (props) => {\r\n\tlet text = props.text;\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t\t<div className={`container ${s.container}`}>\r\n\t\t\t\t<div className={s.logoWrapper}>\r\n\t\t\t\t\t<img src={logo} alt=\"Логотип PranaCell\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<NavLink to=\"/home\">{text.home.link}</NavLink>\r\n\t\t\t\t\t<NavLink to=\"/immunotherapy\">{text.immuno.link}</NavLink>\r\n\t\t\t\t\t<NavLink to=\"/effects\">{text.effects.link}</NavLink>\r\n\t\t\t\t\t<NavLink to=\"/treatment\">{text.treat.link}</NavLink>\r\n\t\t\t\t\t<NavLink to=\"/faq\">{text.faq.link}</NavLink>\r\n\t\t\t\t\t<NavLink to=\"/rehabelitation\">{text.reha.link}</NavLink>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\n\nfunction App(props) {\n\treturn (\n\t\t<div>\n\t\t\t<Header text={props.text} />\n\t\t\t<Route path=\"/home\"></Route>\n\t\t\t<Route path=\"/immunotherapy\"></Route>\n\t\t\t<Route path=\"/effects\"></Route>\n\t\t\t<Route path=\"/treatment\"></Route>\n\t\t\t<Route path=\"/faq\"></Route>\n\t\t\t<Route path=\"/rehabelitation\"></Route>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n// {/* <NavLink exact to=\"/\">\n//   Русский\n// </NavLink>\n// <NavLink to=\"/en\">Английский</NavLink>\n\n// <Route exact path=\"/\" render={() => <Header text={props.langs.ru} />} />\n// <Route path=\"/en\" render={() => <Header text={props.langs.en} />} /> */}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from \"./LangSwitcher.module.sass\";\r\nimport { Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst LangSwitcher = (props) => {\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div className={`container ${s.container}`}>\r\n\t\t\t\t<span className={s.contact}>\r\n\t\t\t\t\tAddress: TURKEY / TOSMUR Mah. 7 Sok. Aqua Aprt\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className={s.contact}>\r\n\t\t\t\t\tTel: +90 5304004353 / +90 552 726 7099\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<div className={s.dropdown}>\r\n\t\t\t\t\t<button className={s.dropbtn}>\r\n\t\t\t\t\t\t<Route path=\"/ru\">\r\n\t\t\t\t\t\t\t<Redirect from=\"/en\" to=\"/ru\" />\r\n\t\t\t\t\t\t\tРусский\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/en\">\r\n\t\t\t\t\t\t\t<Redirect from=\"/ru\" to=\"/en\" />\r\n\t\t\t\t\t\t\tEnglish\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<div className={s.dropdownContent}>\r\n\t\t\t\t\t\t<NavLink to=\"/ru\">Русский</NavLink>\r\n\t\t\t\t\t\t<NavLink to=\"/en\">English</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<a className={s.mail} href=\"mailto:bkteam2211@gmail.com\">\r\n\t\t\t\t\tbkteam2211@gmail.com\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LangSwitcher;\r\n","let text = {\r\n\tru: {\r\n\t\thome: {\r\n\t\t\tlink: \"Наша философия\",\r\n\t\t},\r\n\r\n\t\timmuno: {\r\n\t\t\tlink: \"Иммунотерапия\",\r\n\t\t},\r\n\r\n\t\teffects: {\r\n\t\t\tlink: \"Побочные эффекты\",\r\n\t\t},\r\n\r\n\t\ttreat: {\r\n\t\t\tlink: \"Лечение\",\r\n\t\t},\r\n\r\n\t\tfaq: {\r\n\t\t\tlink: \"Частозадаваемые вопросы\",\r\n\t\t},\r\n\r\n\t\treha: {\r\n\t\t\tlink: \"Реабелитация\",\r\n\t\t},\r\n\t}, /////////////////////////////////////////////////////////////////////english\r\n\ten: {\r\n\t\thome: {\r\n\t\t\tlink: \"Our Philosophy\",\r\n\t\t},\r\n\r\n\t\timmuno: {\r\n\t\t\tlink: \"Immunotherapy\",\r\n\t\t},\r\n\r\n\t\teffects: {\r\n\t\t\tlink: \"Side effects\",\r\n\t\t},\r\n\r\n\t\ttreat: {\r\n\t\t\tlink: \"Treatment\",\r\n\t\t},\r\n\r\n\t\tfaq: {\r\n\t\t\tlink: \"FAQ\",\r\n\t\t},\r\n\r\n\t\treha: {\r\n\t\t\tlink: \"Rehabilitation\",\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport default text;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport LangSwitcher from \"./components/Header/LangSwitcher/LangSwitcher\";\nimport text from \"./text\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<LangSwitcher />\n\n\t\t\t<Redirect exact from=\"/\" to=\"/ru\" />\n\t\t\t<Route\n\t\t\t\tpath=\"/ru\"\n\t\t\t\trender={() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BrowserRouter basename=\"/ru\">\n\t\t\t\t\t\t\t<App text={text.ru} />\n\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Route\n\t\t\t\tpath=\"/en\"\n\t\t\t\trender={() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BrowserRouter basename=\"/en\">\n\t\t\t\t\t\t\t<App text={text.en} />\n\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LangSwitcher_wrapper__seQM7\",\"container\":\"LangSwitcher_container__1NNuk\",\"mail\":\"LangSwitcher_mail__r6ZIU\",\"contact\":\"LangSwitcher_contact__2bcPr\",\"dropbtn\":\"LangSwitcher_dropbtn__3E0AF\",\"dropdown\":\"LangSwitcher_dropdown__3sT4L\",\"dropdownContent\":\"LangSwitcher_dropdownContent__1nkYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3uI3E\",\"container\":\"Header_container__2Mzob\",\"logoWrapper\":\"Header_logoWrapper__xpUtx\"};"],"sourceRoot":""}